// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorAppLineChart.Pages
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\_Imports.razor"
using BlazorAppLineChart;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\_Imports.razor"
using BlazorAppLineChart.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\_Imports.razor"
using ChartJs.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\Pages\LineChart.razor"
using ChartJs.Blazor.Charts;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\Pages\LineChart.razor"
using ChartJs.Blazor.ChartJS.LineChart;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\Pages\LineChart.razor"
using ChartJs.Blazor.ChartJS.Common.Properties;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\Pages\LineChart.razor"
using ChartJs.Blazor.ChartJS.Common.Wrappers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\Pages\LineChart.razor"
using ChartJs.Blazor.ChartJS.Common.Enums;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\Pages\LineChart.razor"
using ChartJs.Blazor.ChartJS.Common.Handlers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\Pages\LineChart.razor"
using ChartJs.Blazor.ChartJS.Common.Axes;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\Pages\LineChart.razor"
using ChartJs.Blazor.Util;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\Pages\LineChart.razor"
using BlazorAppLineChart.Data;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Components.RouteAttribute("/linechart")]
    public partial class LineChart : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 19 "C:\Work\OneDrive - Microsoft\my Experiments\FabConf\BlazorAppLineChart\BlazorAppLineChart\Pages\LineChart.razor"
       
    private LineConfig _config;
    private ChartJsLineChart _lineChartJs;
    private Random _rnd;
    private static int _count = 1;

    protected override async void OnInitialized()
    {
        _rnd = new Random();
        _config = new LineConfig
        {
            Options = new LineOptions
            {
                Responsive = true,
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Line Chart"
                },
                Legend = new Legend
                {
                    Position = Position.Right,
                    Labels = new LegendLabelConfiguration
                    {
                        UsePointStyle = true
                    }
                },
                Tooltips = new Tooltips
                {
                    Mode = InteractionMode.Nearest,
                    Intersect = false
                },
                Scales = new Scales
                {
                    xAxes = new List<CartesianAxis>
                    {
                        new CategoryAxis
                        {
                            ScaleLabel = new ScaleLabel
                            {
                                LabelString = "Month"
                            }
                        }
                    },
                    yAxes = new List<CartesianAxis>
                    {
                        new LinearCartesianAxis
                        {
                            ScaleLabel = new ScaleLabel
                            {
                                LabelString = "Amount (Currency)"
                            }
                        }
                    }
                },
                Hover = new LineOptionsHover
                {
                    Intersect = true,
                    Mode = InteractionMode.Y
                },
                Animation = new Animation
                {
                    Easing = Easing.Linear,
                    Duration = 1000
                }
            }
        };

        var lineDataset = new LineDataset<DoubleWrapper>
        {
            BackgroundColor = ColorUtil.ColorString(255, 255, 255, 1.0),
            BorderColor = ColorUtil.ColorString(0, 0, 255, 1.0),
            Label = "Amount " + _count++,
            Fill = false,
            PointBackgroundColor = ColorUtil.ColorString(255, 255, 255, 1.0),
            BorderWidth = 2,
            PointRadius = 3,
            PointBorderWidth = 1,
            SteppedLine = SteppedLine.False
        };

        var data = await TransferService.GetAmountAsync();
        var chartdata = data.Select(d => new DoubleWrapper(d)).ToArray();

        lineDataset.AddRange(chartdata);

        _config.Data.Datasets.Add(lineDataset);
        _config.Data.Labels = new List<string> { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul" };
    }

    private async void AddData()
    {
        var data = await TransferService.GetAmountAsync();
        string lineColor = ColorUtil.RandomColorString();

        var lineDataset = new LineDataset<DoubleWrapper>
        {
            BackgroundColor = lineColor,
            BorderColor = lineColor,
            Label = "Amount "+ _count++,
            Fill = false,
            PointBackgroundColor = lineColor,
            BorderWidth = 2,
            PointRadius = 3,
            PointBorderWidth = 1,
            SteppedLine = SteppedLine.False
        };

        var chartdata = data.Select(d => new DoubleWrapper(d)).ToArray();

        lineDataset.AddRange(chartdata);
        _config.Data.Datasets.Add(lineDataset);

        await _lineChartJs.Update();
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AmountService TransferService { get; set; }
    }
}
#pragma warning restore 1591
